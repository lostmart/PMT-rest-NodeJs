name: Docker CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

concurrency:
  group: docker-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-smoke-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps (CI)
        run: npm ci

      - name: Typecheck
        run: npm run typecheck

      # ---- Docker build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: pm-backend:ci-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ---- Start and check container
      - name: Run container
        run: |
          docker run -d --rm -p 3000:3000 --name pm-backend pm-backend:ci-${{ github.sha }}
          for i in {1..20}; do
            if curl -sSf http://localhost:3000/api/health > /dev/null; then
              echo "‚úÖ Service is up."
              exit 0
            fi
            echo "‚è≥ Waiting for service..."
            sleep 1
          done
          echo "‚ùå Service did not start in time."
          docker logs pm-backend || true
          exit 1

      - name: Verify /api/health response
        run: |
          curl -sS http://localhost:3000/api/health | tee /tmp/health.json
          jq -e '.ok == true' /tmp/health.json

      # ‚úÖ New: Run seed script after container is ready
      # - name: Seed database with fixed users
      #   run: |
      #     echo "‚è≥ Waiting 2 seconds before seeding..."
      #     sleep 2
      #     docker exec pm-backend npx ts-node scripts/seed.ts

      # üß™ Optional: Check if users were created (uncomment to use)
      # - name: Verify seeded users
      #   run: |
      #     docker exec pm-backend sqlite3 /app/data/db.sqlite 'SELECT email, role FROM users;'

      - name: Show recent logs (on failure)
        if: failure()
        run: docker logs pm-backend || true
